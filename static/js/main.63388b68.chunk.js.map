{"version":3,"sources":["app/Navigation.tsx","app/AppFrame.tsx","app/theme.ts","util/string.ts","util/keyword.ts","components/ExpansionCard.tsx","components/PageHeader.tsx","data/LegionDataStore.tsx","data/index.ts","pages/ExpansionGrid.tsx","components/Surge.tsx","components/Weapon.tsx","components/Anchor.tsx","components/CommandCardCard.tsx","pages/CommandCardGrid.tsx","components/UpgradeCard.tsx","pages/UpgradeGrid.tsx","components/Unit.tsx","pages/UnitGrid.tsx","App.tsx","github/index.ts","serviceWorker.ts","index.tsx"],"names":["RouterLink","React","forwardRef","props","ref","innerRef","Navigation","List","ListItem","button","component","to","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","toolbar","paddingRight","toolbarIcon","display","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","buttonProgress","color","top","left","marginTop","loginWrapper","margin","AppFrame","classes","authenticated","authenticating","gitHubUser","open","onDrawerOpen","onDrawerClose","onLoginClick","onLogoutClick","useState","anchorEl","setAnchorEl","handleClose","Fragment","AppBar","className","clsx","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","Button","disabled","CircularProgress","size","event","currentTarget","Avatar","src","avatarUrl","Menu","id","keepMounted","Boolean","onClose","MenuItem","window","login","Drawer","Divider","secondary","main","light","dark","createMuiTheme","palette","type","overrides","MuiAvatar","colorDefault","backgroundColor","capitalize","str","charAt","toUpperCase","slice","joinKeywords","keywords","map","keyword","name","sort","a","b","join","avatarUnreleased","contrastText","ExpansionCard","data","lookupUnitName","lookupUpgradeName","tooltipText","wave","released","Card","ldf","CardHeader","avatar","Tooltip","CardContent","Grid","direction","item","xs","contents","units","Object","keys","key","upgrades","PageHeader","initialState","sources","commandCards","unitNames","upgradeNames","LegionDataContext","createContext","state","dispatch","reducer","action","useStore","useContext","sorter","ExpansionGrid","expansions","findUnitName","findUpgradeName","justify","expansion","Surge","surge","attack","defense","Range","range","from","Keywords","Dice","dice","red","black","white","Weapon","weapon","raised","gutterBottom","anchor","visibility","Anchor","CommandCardCard","commandCard","pips","subheader","orders","description","CommandCardGrid","sm","lg","SegmentDivider","Segment","children","UpgradeCard","upgrade","points","restrictions","exhaust","UpgradeGrid","Unit","unit","UnitGrid","root","App","JSON","parse","localStorage","getItem","setOpen","setAuthenticating","sessionStorage","token","setToken","setGitHubUser","useEffect","setItem","stringify","version","async","fetch","resp","json","fetchLegionDataForVersion","process","then","legionData","uNames","forEach","upNames","match","location","href","code","response","method","headers","Accept","Authorization","body","query","j","viewer","getViewer","ghUser","setTimeout","origin","basename","ThemeProvider","CssBaseline","removeItem","Container","maxWidth","path","hostname","ReactDOM","render","useReducer","Provider","value","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63388b68.chunk.js","sourcesContent":["import React from \"react\";\nimport { ListItem, ListItemIcon, ListItemText, List } from \"@material-ui/core\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport AllOutIcon from \"@material-ui/icons/AllOut\";\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport PlusOneIcon from \"@material-ui/icons/PlusOne\";\nimport { Link, LinkProps } from \"react-router-dom\";\n\nconst RouterLink = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  (props, ref) => <Link innerRef={ref} {...props} />\n);\n\nexport default function Navigation() {\n  return (\n    <List>\n      <ListItem button component={RouterLink} to=\"/\">\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button component={RouterLink} to=\"/expansions\">\n        <ListItemIcon>\n          <AllOutIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Expansions\" />\n      </ListItem>\n      <ListItem button component={RouterLink} to=\"/units\">\n        <ListItemIcon>\n          <PeopleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Units\" />\n      </ListItem>\n      <ListItem button component={RouterLink} to=\"/upgrades\">\n        <ListItemIcon>\n          <PlusOneIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Upgrades\" />\n      </ListItem>\n      <ListItem button component={RouterLink} to=\"/command-cards\">\n        <ListItemIcon>\n          <AnnouncementIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Command Cards\" />\n      </ListItem>\n      <ListItem button component={RouterLink} to=\"/keywords\">\n        <ListItemIcon>\n          <DescriptionIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Keywords\" />\n      </ListItem>\n    </List>\n  );\n}\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  Divider,\n  Typography,\n  Button,\n  CircularProgress,\n  Avatar,\n  Menu,\n  MenuItem,\n  ListItemText,\n  ListItemIcon\n} from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\nimport Navigation from \"./Navigation\";\nimport { GitHubUser } from \"../github\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer is closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  },\n  buttonProgress: {\n    color: \"white\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12\n  },\n  loginWrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\"\n  }\n}));\n\ninterface Props {\n  authenticated: boolean;\n  authenticating: boolean;\n  gitHubUser?: GitHubUser;\n  open: boolean;\n  onDrawerOpen: Function;\n  onDrawerClose: Function;\n  onLoginClick: Function;\n  onLogoutClick: Function;\n}\n\nexport default function AppFrame(props: Props) {\n  const classes = useStyles();\n  const {\n    authenticated,\n    authenticating,\n    gitHubUser,\n    open,\n    onDrawerOpen,\n    onDrawerClose,\n    onLoginClick,\n    onLogoutClick\n  } = props;\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    handleClose();\n    onLogoutClick();\n  };\n\n  const handleProfileClick = () => {\n    handleClose();\n    if (gitHubUser) {\n      window.open(`https://github.com/${gitHubUser.login}`, \"_blank\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => onDrawerOpen()}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Star Wars Legion Data\n          </Typography>\n          <div className={classes.loginWrapper}>\n            {!authenticated && (\n              <Button\n                color=\"inherit\"\n                onClick={() => onLoginClick()}\n                disabled={authenticating}\n              >\n                Login\n              </Button>\n            )}\n\n            {authenticating && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n\n            {authenticated && !authenticating && gitHubUser && (\n              <React.Fragment>\n                <IconButton onClick={handleClick} size=\"small\">\n                  <Avatar src={gitHubUser.avatarUrl} />\n                </IconButton>\n\n                <Menu\n                  id=\"user-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleProfileClick}>\n                    <ListItemIcon>\n                      <GitHubIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={`@${gitHubUser.login}`} />\n                  </MenuItem>\n                  <MenuItem onClick={handleLogout}>\n                    <ListItemIcon>\n                      <ExitToAppIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Logout\" />\n                  </MenuItem>\n                </Menu>\n              </React.Fragment>\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={() => onDrawerClose()}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n\n        <Divider />\n\n        {/* Navigation */}\n        <Navigation />\n\n        <Divider />\n      </Drawer>\n    </React.Fragment>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst primary = {\n  main: \"#424242\",\n  light: \"#6d6d6d\",\n  dark: \"#1b1b1b\"\n};\n\nconst secondary = {\n  main: \"#9c27b0\",\n  light: \"#d05ce3\",\n  dark: \"#6a0080\"\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary,\n    secondary\n  },\n  overrides: {\n    MuiAvatar: {\n      colorDefault: {\n        backgroundColor: secondary.main,\n        color: \"white\"\n      }\n    }\n  }\n});\n\nexport default theme;\n","export function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}","import { Keyword } from \"../model\";\n\nexport function joinKeywords(keywords: (string | Keyword)[]): string {\n  return keywords\n    .map((keyword: string | Keyword) =>\n      typeof keyword === \"object\" ? keyword.name : `${keyword}`\n    )\n    .sort((a: string, b: string) => (a < b ? -1 : 1))\n    .join(\", \");\n}\n","import React from \"react\";\nimport Expansion from \"../model/expansion\";\nimport {\n  Card,\n  CardHeader,\n  Avatar,\n  makeStyles,\n  Tooltip,\n  CardContent,\n  Typography,\n  Grid\n} from \"@material-ui/core\";\nimport { capitalize } from \"../util\";\n\ninterface Props {\n  data: Expansion;\n  lookupUnitName: Function;\n  lookupUpgradeName: Function;\n}\n\nconst useStyles = makeStyles(theme => ({\n  avatarUnreleased: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.primary.contrastText\n  }\n}));\n\nexport default function ExpansionCard(props: Props) {\n  const { data, lookupUnitName, lookupUpgradeName } = props;\n  const classes = useStyles();\n  let tooltipText = `released in wave ${data.wave}`;\n  if (!data.released) {\n    tooltipText = `to be ${tooltipText}`;\n  }\n\n  return (\n    <Card id={data.ldf}>\n      <CardHeader\n        avatar={\n          <Tooltip title={capitalize(tooltipText)}>\n            <Avatar className={!data.released ? classes.avatarUnreleased : \"\"}>\n              {data.wave}\n            </Avatar>\n          </Tooltip>\n        }\n        title={data.name}\n      />\n\n      <CardContent>\n        <Grid container direction=\"row\" spacing={2}>\n          <Grid item xs={6}>\n            {/* Units */}\n            <Typography component=\"p\" variant=\"subtitle2\" color=\"textPrimary\">\n              Units\n            </Typography>\n            {data.contents.units &&\n              Object.keys(data.contents.units).map((key: string) => (\n                <Typography\n                  key={`${data.ldf}-${key}`}\n                  component=\"p\"\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {lookupUnitName(key)}:{\" \"}\n                  {data.contents.units && data.contents.units[key]}\n                </Typography>\n              ))}\n          </Grid>\n\n          <Grid item xs={6}>\n            {/* Upgrades */}\n            <Typography component=\"p\" variant=\"subtitle2\" color=\"textPrimary\">\n              Upgrades\n            </Typography>\n            {data.contents.upgrades &&\n              Object.keys(data.contents.upgrades).map((key: string) => (\n                <Typography\n                  key={`${data.ldf}-${key}`}\n                  component=\"p\"\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {lookupUpgradeName(key)}:{\" \"}\n                  {data.contents.upgrades && data.contents.upgrades[key]}\n                </Typography>\n              ))}\n          </Grid>\n        </Grid>\n      </CardContent>\n\n      {/* Units */}\n      {/* <div>\n        \n      </div> */}\n\n      {/* Upgrades */}\n      {/* <div>\n        {data.contents.upgrades && Object.keys(data.contents.upgrades).map((key: string) => (\n        <div>{key}: {data.contents.upgrades && data.contents.upgrades[key]}</div>\n        ))}\n      </div> */}\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Typography, Divider } from \"@material-ui/core\";\n\ninterface Props {\n  title: string;\n}\n\nexport default function PageHeader(props: Props) {\n  return (\n    <React.Fragment>\n      <Typography component=\"h3\" variant=\"h3\">\n        {props.title}\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n    </React.Fragment>\n  );\n}\n","import React, {createContext, useContext, useReducer} from 'react'\nimport {getEmptyLegionData} from \"./index\";\nimport LegionData, {LdfNamePair} from \"../model\";\n\ninterface Props {\n    children: React.ReactChildren | Element | React.ReactChild;\n}\n\ninterface IState {\n    data: LegionData;\n    unitNames: LdfNamePair;\n    upgradeNames: LdfNamePair;\n}\n\ninterface ILegionDataContext {\n    state: typeof initialState;\n    dispatch: (action: Action) => void\n}\n\ntype Action =\n    | { type: \"legion-data-changed\", data: LegionData }\n    | { type: \"unit-names-changed\", unitNames: LdfNamePair }\n    | { type: \"upgrade-names-changed\", upgradeNames: LdfNamePair }\n\nconst initialState: IState = {\n    data: getEmptyLegionData(),\n    unitNames: {},\n    upgradeNames: {}\n};\n\nconst LegionDataContext = createContext<ILegionDataContext>({\n    state: initialState,\n    dispatch: () => {}\n});\n\nconst reducer = (state: IState, action: Action) => {\n    switch (action.type) {\n        case \"unit-names-changed\":\n            return {\n                ...state,\n                unitNames: action.unitNames\n            };\n        case \"upgrade-names-changed\":\n            return {\n                ...state,\n                upgradeNames: action.upgradeNames\n            };\n        case \"legion-data-changed\":\n            return {\n                ...state,\n                data: { ...action.data }\n            };\n\n        default:\n            return state\n    }\n};\n\nexport const LegionDataProvider = ({ children }: Props) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <LegionDataContext.Provider value={{state, dispatch}}>\n            {children}\n        </LegionDataContext.Provider>\n    )\n};\n\nexport const useStore = () => useContext(LegionDataContext);","import LegionData from \"../model\";\n\nexport async function fetchLegionDataForVersion(version: string): Promise<LegionData> {\n  const resp = await fetch(`https://cdn.jsdelivr.net/gh/andrelind/legion-data@${version}/out/legion-data.json`);\n  return await resp.json();\n}\n\nexport function getEmptyLegionData(): LegionData {\n  return {\n    units: {},\n    upgrades: {},\n    sources: [],\n    commandCards: []\n  };\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport ExpansionCard from \"../components/ExpansionCard\";\nimport Expansion from \"../model/expansion\";\nimport PageHeader from \"../components/PageHeader\";\nimport {useStore} from \"../data/LegionDataStore\";\n\nfunction sorter(a: Expansion, b: Expansion): number {\n  // if the waves are the same then sort on name\n  if (a.wave === b.wave) {\n    return a.name < b.name ? -1 : 1;\n  }\n\n  // sort on wave\n  return a.wave < b.wave ? -1 : 1;\n}\n\nexport default function ExpansionGrid() {\n  const { state } = useStore();\n  const { data, unitNames, upgradeNames } = state;\n  const { sources: expansions } = data;\n\n  const findUnitName = (ldf: string): string => {\n    const name: string = unitNames[ldf];\n    if (!name) {\n      return ldf;\n    }\n    return name;\n  };\n\n  const findUpgradeName = (ldf: string): string => {\n    const name: string = upgradeNames[ldf];\n    if (!name) {\n      return ldf;\n    }\n    return name;\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader title=\"Expansions\" />\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n      >\n        {/* Expansions */}\n        {expansions.sort(sorter).map((expansion: Expansion) => (\n          <Grid key={expansion.ldf} item xs={12}>\n            <ExpansionCard\n              data={expansion}\n              lookupUnitName={findUnitName}\n              lookupUpgradeName={findUpgradeName}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Surge as SurgeModel } from \"../model\";\nimport { capitalize } from \"../util\";\n\ninterface SurgeProps {\n  surge: SurgeModel;\n}\n\nexport default function Surge(props: SurgeProps) {\n  const { surge } = props;\n  return (\n    <Grid container direction=\"row\" spacing={1}>\n      <Grid item>Surge:</Grid>\n      {surge.attack && (\n        <Grid item>\n          Attack: {capitalize(surge.attack)}\n          {surge.defense && \",\"}\n        </Grid>\n      )}\n      {surge.defense && <Grid item>Defense: {capitalize(surge.defense)}</Grid>}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport {\n  Weapon as WeaponModel,\n  Range as RangeModel,\n  Keyword,\n  AttackDice\n} from \"../model\";\nimport Surge from \"./Surge\";\nimport { joinKeywords } from \"../util\";\n\ninterface RangeProps {\n  range: RangeModel;\n}\n\nfunction Range(props: RangeProps) {\n  const { range } = props;\n  let str = \"\";\n  if (range.to === 0) {\n    str = \"Melee\";\n  } else {\n    str = `${range.from === 0 ? \"Melee\" : range.from}`;\n    if (range.from !== range.to) {\n      str = `${str}${range.from === 0 ? \" / \" : \" - \"}`;\n      str = `${str}${range.to ? range.to : \"∞\"}`;\n    }\n  }\n\n  return (\n    <Grid container direction=\"row\" spacing={1}>\n      <Grid item>Range: {str}</Grid>\n    </Grid>\n  );\n}\n\ninterface KeywordsProps {\n  keywords: (string | Keyword)[];\n}\n\nfunction Keywords(props: KeywordsProps) {\n  const { keywords } = props;\n  return <div>Keywords: {joinKeywords(keywords)}</div>;\n}\n\ninterface DiceProps {\n  dice: AttackDice;\n}\n\nfunction Dice(props: DiceProps) {\n  const { dice } = props;\n  return (\n    <Grid container direction=\"row\" spacing={1}>\n      <Grid item xs={3}>\n        Dice:\n      </Grid>\n      {dice.red && (\n        <Grid item xs={3}>\n          Red: {dice.red}\n        </Grid>\n      )}\n      {dice.black && (\n        <Grid item xs={3}>\n          Black: {dice.black}\n        </Grid>\n      )}\n      {dice.white && (\n        <Grid item xs={3}>\n          White: {dice.white}\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\ninterface Props {\n  weapon: WeaponModel;\n}\n\nexport default function Weapon(props: Props) {\n  const { weapon } = props;\n  return (\n    <Card raised>\n      <CardContent>\n        {weapon.name && (\n          <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n            {weapon.name}\n          </Typography>\n        )}\n        <Range range={weapon.range} />\n        <Dice dice={weapon.dice} />\n        {weapon.surge && <Surge surge={weapon.surge} />}\n        {weapon.keywords && <Keywords keywords={weapon.keywords} />}\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  anchor: {\n    display: \"block\",\n    position: \"relative\",\n    top: -100,\n    visibility: \"hidden\"\n  }\n});\n\ninterface Props {\n  id: string;\n}\n\nexport default function Anchor(props: Props) {\n  const classes = useStyles();\n  return <div className={classes.anchor} id={props.id} />;\n}\n","import React from \"react\";\nimport CommandCard from \"../model/command-card\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Tooltip,\n  Avatar\n} from \"@material-ui/core\";\nimport Weapon from \"./Weapon\";\nimport Anchor from \"./Anchor\";\n\ninterface Props {\n  commandCard: CommandCard;\n}\n\nexport default function CommandCardCard(props: Props) {\n  const { commandCard } = props;\n  return (\n    <React.Fragment>\n      <Anchor id={commandCard.ldf} />\n      <Card>\n        <CardHeader\n          avatar={\n            <Tooltip\n              title={`${commandCard.pips} pip${\n                commandCard.pips !== 1 ? \"s\" : \"\"\n              }`}\n            >\n              <Avatar>{commandCard.pips}</Avatar>\n            </Tooltip>\n          }\n          title={commandCard.name}\n          subheader={\n            <Typography variant=\"subtitle2\">{commandCard.orders}</Typography>\n          }\n        />\n        <CardContent>\n          {commandCard.description && <div>{commandCard.description}</div>}\n          {commandCard.weapon && <Weapon weapon={commandCard.weapon} />}\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport CommandCard from \"../model/command-card\";\nimport CommandCardCard from \"../components/CommandCardCard\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeader from \"../components/PageHeader\";\nimport {useStore} from \"../data/LegionDataStore\";\n\n\nexport default function CommandCardGrid() {\n  const { state } = useStore();\n  const { commandCards } = state.data;\n  return (\n    <React.Fragment>\n      <PageHeader title=\"Command Cards\" />\n      <Grid container spacing={3} direction=\"row\">\n        {commandCards\n          .sort((a: CommandCard, b: CommandCard) => {\n            if (a.pips === b.pips) {\n              return a.name < b.name ? -1 : 1;\n            }\n            return a.pips < b.pips ? -1 : 1;\n          })\n          .map((commandCard: CommandCard) => (\n            <Grid item key={`cc-${commandCard.ldf}`} sm={12} lg={4}>\n              <CommandCardCard commandCard={commandCard} />\n            </Grid>\n          ))}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { ReactChild } from \"react\";\nimport Upgrade from \"../model/upgrade\";\nimport {\n  Card,\n  CardHeader,\n  Avatar,\n  Tooltip,\n  CardContent,\n  Divider\n} from \"@material-ui/core\";\nimport Anchor from \"./Anchor\";\nimport Weapon from \"./Weapon\";\nimport { joinKeywords } from \"../util\";\n\nfunction SegmentDivider() {\n  return (\n    <React.Fragment>\n      <br />\n      <Divider />\n      <br />\n    </React.Fragment>\n  );\n}\n\ninterface SegmentProps {\n  children: ReactChild | ReactChild[];\n}\n\nfunction Segment(props: SegmentProps) {\n  return (\n    <React.Fragment>\n      <SegmentDivider />\n      <div>{props.children}</div>\n    </React.Fragment>\n  );\n}\n\ninterface Props {\n  upgrade: Upgrade;\n}\n\nexport default function UpgradeCard(props: Props) {\n  const { upgrade } = props;\n  return (\n    <Card>\n      <Anchor id={upgrade.ldf} />\n      <CardHeader\n        title={upgrade.name}\n        avatar={\n          <Tooltip title={`${upgrade.points} points`}>\n            <Avatar>{upgrade.points}</Avatar>\n          </Tooltip>\n        }\n      />\n      <CardContent>\n        {upgrade.restrictions && (\n          <Segment>Restrictions: {upgrade.restrictions.name}</Segment>\n        )}\n        {upgrade.exhaust === true && <Segment>Exhaustable</Segment>}\n        {upgrade.keywords && (\n          <Segment>Keywords: {joinKeywords(upgrade.keywords)}</Segment>\n        )}\n        {upgrade.description && (\n          <Segment>Description: {upgrade.description}</Segment>\n        )}\n        {upgrade.weapon && (\n          <Segment>\n            <Weapon weapon={upgrade.weapon} />\n          </Segment>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport UpgradeModel from \"../model/upgrade\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport UpgradeCard from \"../components/UpgradeCard\";\nimport {useStore} from \"../data/LegionDataStore\";\n\n\nexport default function UpgradeGrid() {\n  const { state } = useStore();\n  const { upgrades } = state.data;\n  return (\n    <React.Fragment>\n      <PageHeader title=\"Upgrades\" />\n      {Object.keys(upgrades)\n        .sort((a: string, b: string) => (a < b ? -1 : 1))\n        .map((key: string) => (\n          <div key={`upgrade-group-${key}`}>\n            <Typography variant=\"h5\" gutterBottom>\n              {key}\n            </Typography>\n            <Grid container spacing={2} direction=\"row\">\n              {upgrades[key]\n                .sort((a: UpgradeModel, b: UpgradeModel) =>\n                  a.points === b.points\n                    ? a.name < b.name\n                      ? -1\n                      : 1\n                    : a.points < b.points\n                    ? -1\n                    : 1\n                )\n                .map((upgrade: UpgradeModel) => (\n                  <Grid item key={`upgrade-${upgrade.ldf}`} sm={12} lg={3}>\n                    <UpgradeCard upgrade={upgrade} />\n                  </Grid>\n                ))}\n            </Grid>\n            <br />\n            <Divider />\n            <br />\n          </div>\n        ))}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport UnitModel from \"../model/unit\";\nimport { Card, CardHeader, Tooltip, Avatar } from \"@material-ui/core\";\n\ninterface Props {\n  unit: UnitModel;\n}\n\nexport default function Unit(props: Props) {\n  const { unit } = props;\n\n  return (\n    <Card>\n      <CardHeader\n        title={unit.name}\n        avatar={\n          <Tooltip title={`${unit.points} points`}>\n            <Avatar>{unit.points}</Avatar>\n          </Tooltip>\n        }\n      />\n    </Card>\n  );\n}\n","import React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport UnitModel  from \"../model/unit\";\nimport { Typography, Divider, Grid } from \"@material-ui/core\";\nimport Unit from \"../components/Unit\";\nimport {useStore} from \"../data/LegionDataStore\";\n\nexport function UnitGrid() {\n  const { state } = useStore();\n  const { units } = state.data;\n\n  return (\n    <React.Fragment>\n      <PageHeader title=\"Units\" />\n      {Object.keys(units)\n        .sort((a: string, b: string) => (a < b ? -1 : 1))\n        .map((key: string) => (\n          <div key={key}>\n            <Typography variant=\"h5\" gutterBottom>\n              {key}\n            </Typography>\n\n            <Grid container spacing={2} direction=\"row\">\n              {units[key]\n                .sort((a: UnitModel, b: UnitModel) =>\n                  a.points === b.points\n                    ? a.name < b.name\n                      ? -1\n                      : 1\n                    : a.points < b.points\n                    ? -1\n                    : 1\n                )\n                .map((unit: UnitModel) => (\n                  <Grid item key={unit.ldf} sm={3}>\n                    <Unit unit={unit} />\n                  </Grid>\n                ))}\n            </Grid>\n\n            <br />\n            <Divider />\n            <br />\n          </div>\n        ))}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline, Container } from \"@material-ui/core\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport { AppFrame, theme } from \"./app/index\";\nimport ExpansionGrid from \"./pages/ExpansionGrid\";\nimport { getViewer } from \"./github\";\nimport CommandCardGrid from \"./pages/CommandCardGrid\";\nimport UpgradeGrid from \"./pages/UpgradeGrid\";\nimport { UnitGrid } from \"./pages/UnitGrid\";\nimport {useStore} from \"./data/LegionDataStore\";\nimport {fetchLegionDataForVersion} from \"./data\";\nimport LegionData, {LdfNamePair} from \"./model\";\nimport Unit from \"./model/unit\";\nimport Upgrade from \"./model/upgrade\";\n\nconst CLIENT_ID: string | undefined = process.env.REACT_APP_CLIENT_ID;\nconst REDIRECT_URI: string | undefined = process.env.REACT_APP_REDIRECT_URI;\nconst gatekeeper: string | undefined = process.env.REACT_APP_GATEKEEPER;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\nconst App: React.FC = () => {\n  const { dispatch } = useStore();\n  const classes = useStyles();\n  const [open, setOpen] = useState(\n    JSON.parse(localStorage.getItem(\"open\") || \"true\")\n  );\n  const [authenticating, setAuthenticating] = useState(false);\n  const [token, setToken] = useState(sessionStorage.getItem(\"token\") || \"\");\n  const [gitHubUser, setGitHubUser] = useState(\n    JSON.parse(sessionStorage.getItem(\"gitHubUser\") || \"null\")\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"open\", JSON.stringify(open));\n  }, [open]);\n\n  useEffect(() => {\n    sessionStorage.setItem(\"token\", token);\n  }, [token]);\n\n  useEffect(() => {\n    sessionStorage.setItem(\"gitHubUser\", JSON.stringify(gitHubUser));\n  }, [gitHubUser]);\n\n  useEffect(() => {\n    // fetch the legionData\n    fetchLegionDataForVersion(`${process.env.REACT_APP_LEGION_DATA_VERSION}`)\n      .then((legionData: LegionData) => {\n        // build a map of unit ldf / name pairs\n        const uNames: LdfNamePair = {};\n        Object.keys(legionData.units).forEach((key: string) => {\n          legionData.units[key].forEach((unit: Unit) => {\n            uNames[unit.ldf] = unit.name;\n          });\n        });\n\n        // build a map of upgrade ldf / name pairs\n        const upNames: LdfNamePair = {};\n        Object.keys(legionData.upgrades).forEach((key: string) => {\n          legionData.upgrades[key].forEach((upgrade: Upgrade) => {\n            upNames[upgrade.ldf] = upgrade.name;\n          });\n        });\n\n        dispatch({ type: \"unit-names-changed\", unitNames: uNames});\n        dispatch({ type: \"upgrade-names-changed\", upgradeNames: upNames});\n        dispatch({ type: \"legion-data-changed\", data: legionData });\n      });\n    // capture the auth token from github if there is one\n    const match = window.location.href.match(/\\?code=(.*)/);\n    if (match) {\n      const code: string = match[1];\n\n      if (code) {\n        setAuthenticating(true);\n        fetch(`${gatekeeper}/authenticate/${code}`)\n          .then(response => response.json())\n          .then(({ token }) => {\n            getViewer(token).then(ghUser => {\n              setAuthenticating(false);\n              setToken(token);\n              setGitHubUser(ghUser);\n              setTimeout(\n                () => (window.location.href = window.location.origin),\n                100\n              );\n            });\n          });\n      }\n    }\n  }, [dispatch]);\n\n  const handleLoginClick = () => {\n    setAuthenticating(true);\n    window.location.href = `https://github.com/login/oauth/authorize?client_id=${CLIENT_ID}&scope=user&redirect_uri=${REDIRECT_URI}`;\n  };\n\n  const handleLogoutClick = () => {\n    setToken(\"\");\n    setGitHubUser(null);\n    sessionStorage.removeItem(\"item\");\n    sessionStorage.removeItem(\"gitHubUser\");\n    window.location.href = window.location.origin;\n  };\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  return (\n    <HashRouter basename=\"/\">\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppFrame\n            authenticated={token !== \"\"}\n            authenticating={authenticating}\n            gitHubUser={gitHubUser}\n            open={open}\n            onDrawerOpen={handleDrawerOpen}\n            onDrawerClose={handleDrawerClose}\n            onLoginClick={handleLoginClick}\n            onLogoutClick={handleLogoutClick}\n          />\n\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"lg\" className={classes.container}>\n              <Switch>\n                <Route path=\"/expansions\">\n                  <ExpansionGrid />\n                </Route>\n                <Route path=\"/units\">\n                  <UnitGrid />\n                </Route>\n                <Route path=\"/upgrades\">\n                  <UpgradeGrid />\n                </Route>\n                <Route path=\"/command-cards\">\n                  <CommandCardGrid />\n                </Route>\n              </Switch>\n            </Container>\n          </main>\n        </div>\n      </ThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","export interface GitHubUser {\n  name: string;\n  login: string;\n  avatarUrl: string;\n}\n\nexport async function getViewer(token: string): Promise<GitHubUser> {\n  const query = `\n    query {\n      viewer {\n        name\n        login\n        avatarUrl\n      }\n    }\n  `;\n\n  const resp = await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({ query })\n  });\n\n  const j = await resp.json();\n  return j.data.viewer;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {LegionDataProvider} from \"./data/LegionDataStore\";\n\nReactDOM.render(\n    <LegionDataProvider>\n        <App />\n    </LegionDataProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}